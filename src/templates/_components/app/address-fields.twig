{# Check for any custom fields that are setup in address field layouts (we are only gettnig plain text fields for now) #}
{# {% dd craft.app.getAddresses() %} #}
{% set addressFieldLayout = craft.app.getAddresses().getFieldLayout() %}
{% set addressCustomFields = addressFieldLayout.getCustomFields()|filter(field => className(field) == 'craft\\fields\\PlainText') %}

{# Set defaults for context and the address object, in case they are null #}
{% set context = context ?? '' %}
{% set address = address ?? null %}
{% set errors = address ? address.getErrors : {} %}

<div
	v-scope="{
		address: {{ address|json_encode }},
		countryCode: '{{ address ? address.countryCode : '' }}',
		administrativeArea: '{{ address ? address.administrativeArea : '' }}',
		countries: {{ craft.commerce.store.store.getCountriesList()|json_encode }},
		regions: {{ craft.commerce.store.getStore().getAdministrativeAreasListByCountryCode()|json_encode }},
		errors: {{ errors|json_encode }}
	}"
	class="grid grid-cols-1 gap-y-8 gap-x-6 sm:grid-cols-3"
>

	<div class="sm:col-span-3">
		<label for="{{ 'countryCode'|namespaceInputId(context) }}" class="block mb-2 font-medium text-gray-500">
			{{ 'Country'|t('foster-checkout') }}*
		</label>
		<select
			v-model="countryCode"
			id="{{ 'countryCode'|namespaceInputId(context) }}"
			name="{{ context ? 'countryCode'|namespaceInputName(context) : 'countryCode' }}"
			autocomplete="country-name"
			class="w-full h-12 px-4 bg-white rounded-xl focus:!ring-0 focus:!outline-none placeholder:text-gray-400 transition-color duration-300"
			:class="'countryCode' in errors ? 'border-red-500 focus:border-red-500' : 'border-gray-500 focus:border-black'"
			:aria-invalid="'countryCode' in errors"
			aria-errormessage="{{ 'countryCode'|namespaceInputId(context) }}-error"
			@change="administrativeArea = ''; if ($el.value) delete errors.countryCode"
			required
		>
			<option value="" disabled>{{ 'Select'|t('foster-checkout') }}</option>
			<option v-cloak v-for="(country, key) in countries" :value="key">
				${country}
			</option>
		</select>
		<div
			v-cloak
			v-if="'countryCode' in errors"
			id="{{ 'countryCode'|namespaceInputId(context) }}-error"
			class="mt-1 text-sm text-red-500"
		>
			${ errors.countryCode ? errors.countryCode.join(' ') : '' }
		</div>
	</div>

	<div class="sm:col-span-3">
		{% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'Full name'|t('foster-checkout'),
			id: 'fullName',
			name: 'fullName',
			type: 'text',
			autocomplete: 'name',
			placeholder: 'Enter your name'|t('foster-checkout'),
			value: address ? address.fullName : '',
			required: true,
			errors: errors.fullName ?? []
		} %}
	</div>

	<div class="grid grid-cols-1 gap-y-4 gap-x-6 sm:col-span-3">
		{% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'Address'|t('foster-checkout'),
			id: 'addressLine1',
			name: 'addressLine1',
			type: 'text',
			autocomplete: 'address-line1',
			placeholder: 'Street address'|t('foster-checkout'),
			value: address ? address.addressLine1 : '',
			required: true,
			errors: errors.addressLine1 ?? []
		} %}

		{% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'Apt. number, suite'|t('foster-checkout'),
			hideLabel: true,
			id: 'addressLine2',
			name: 'addressLine2',
			type: 'text',
			autocomplete: 'address-line2',
			placeholder: 'Apt. number, suite'|t('foster-checkout'),
			value: address ? address.addressLine2 : '',
			errors: errors.addressLine2 ?? []
		} %}

    {% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'Line 3',
			hideLabel: true,
			id: 'addressLine3',
			name: 'addressLine3',
			type: 'text',
			autocomplete: 'address-line3',
			placeholder: '',
			value: address ? address.addressLine2 : '',
			errors: errors.addressLine2 ?? []
		} %}
	</div>

	<div class="sm:col-span-1">
		{% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'City'|t('foster-checkout'),
			id: 'locality',
			name: 'locality',
			type: 'text',
			autocomplete: 'address-level2',
			placeholder: 'Your city'|t('foster-checkout'),
			value: address ? address.locality : '',
			errors: errors.locality ?? []
		} %}
	</div>

	<div class="sm:col-span-1">

		<div v-if="regions[countryCode] && !Array.isArray(regions[countryCode])">
			<label for="{{ 'administrativeArea'|namespaceInputId(context) }}" class="block mb-2 font-medium text-gray-500">
				{{ 'State / Province'|t('foster-checkout') }}*
			</label>
			<select
				v-model="administrativeArea"
				id="{{ 'administrativeArea'|namespaceInputId(context) }}"
				name="{{ context ? 'administrativeArea'|namespaceInputName(context) : 'administrativeArea' }}"
				autocomplete="address-level1"
				class="w-full h-12 px-4 bg-white rounded-xl focus:!ring-0 focus:!outline-none placeholder:text-gray-400 transition-color duration-300"
				:class="'administrativeArea' in errors ? 'border-red-500 focus:border-red-500' : 'border-gray-500 focus:border-black'"
				:aria-invalid="'administrativeArea' in errors"
				aria-errormessage="{{ 'administrativeArea'|namespaceInputId(context) }}-error"
				@change="if ($el.value) delete errors.administrativeArea"
				required
			>
				<option value="" disabled>{{ 'Select'|t('foster-checkout') }}</option>
				<option v-cloak v-for="(region, key) in regions[countryCode]" :value="key" :selected="key === administrativeArea">
					${region}
				</option>
			</select>


		</div>

		<div v-cloak v-else>
			{% include 'foster-checkout/_components/base/input-text-clearable' with {
				context: context,
				label: 'State / Province'|t('foster-checkout'),
				id: 'administrativeArea',
				name: 'administrativeArea',
				type: 'text',
				autocomplete: 'address-level1',
				placeholder: 'Your state or province'|t('foster-checkout'),
				value: address ? address.locality : '',
				required: true,
				errors: errors.locality ?? []
			} %}
		</div>
	</div>

	<div class="sm:col-span-1">
		{% include 'foster-checkout/_components/base/input-text-clearable' with {
			context: context,
			label: 'Postal Code'|t('foster-checkout'),
			id: 'postalCode',
			name: 'postalCode',
			type: 'text',
			autocomplete: 'postal-code',
			placeholder: 'postalCodeFormat'|t('foster-checkout'),
			value: address ? address.postalCode : '',
			required: true,
			errors: errors.postalCode ?? []
		} %}
	</div>

	{% for customField in addressCustomFields %}

		<div class="sm:col-span-3">

			{% if customField.multiline %}

				<label for="{{ ('custom-field-' ~ customField.handle)|namespaceInputId(context) }}" class="block text-sm font-medium text-gray-700">
					{{ customField.name }}{% if customField.required %}*{% endif %}
				</label>

				<textarea
					id="{{ ('custom-field-' ~ customField.handle)|namespaceInputId(context) }}"
					name="{{ context ? ('fields[' ~ customField.handle ~ ']')|namespaceInputName(context) : ('fields[' ~ customField.handle ~ ']') }}"
					class="w-full p-4 bg-white rounded-xl focus:!ring-0 focus:!outline-none placeholder:text-gray-400 transition-color duration-300"
					:class="'{{ customField.handle }}' in errors ? 'border-red-500 focus:border-red-500' : 'border-gray-500 focus:border-black'"
					rows="{{ customField.initialRows }}"
					{% if not customField.required %}
						aria-describedby="{{ ('custom-field-' ~ customField.handle)|namespaceInputId(context) }}-optional"
					{% endif %}
					:aria-invalid="'{{ customField.handle }}' in errors"
					aria-errormessage="{{ ('custom-field-' ~ customField.handle)|namespaceInputId(context) }}-error"
					placeholder="{{ customField.placeholder }}"
					@input="if ($el.value) delete errors.{{ customField.handle }}"
					{% if customField.required %}
						required
					{% endif %}
				>{{ address ? address[customField.handle] : '' }}</textarea>

				<div
					v-cloak
					v-if="'{{ customField.handle }}' in errors"
					id="{{ ('custom-field-' ~ customField.handle)|namespaceInputId(context) }}-error"
					class="mt-1 text-sm text-red-500"
				>
					${ errors.{{ customField.handle }} ? errors.{{ customField.handle }}.join(' ') : '' }
				</div>

			{% else %}

				{% include 'foster-checkout/_components/base/input-text-clearable' with {
					context: context,
					label: customField.name,
					id: 'custom-field-' ~ customField.handle,
					name: 'fields[' ~ customField.handle ~ ']',
					type: 'text',
					placeholder: customField.placeholder,
					value: address ? address[customField.handle] : '',
					required: customField.required,
					errors: errors[customField.handle] ?? []
				} %}

			{% endif %}

		</div>

	{% endfor %}

</div>
