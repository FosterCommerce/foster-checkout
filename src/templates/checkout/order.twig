{% extends 'foster-checkout/_layouts/default' %}
{% set order = craft.orders.number(craft.app.request.getParam('number')).one() ?? null %}
{% if not order %}
	{% exit 404 %}
{% endif %}

{% block head %}
	<title>
		{{ craft.checkout.branding.title ? craft.checkout.branding.title : siteName }} |
		{{ 'Checkout'|t('foster-checkout') }} : {{ 'Order'|t('foster-checkout') }}
	</title>
{% endblock %}

{% block body %}

	<div
		class="grid grid-cols-1 gap-16 mt-10 pb-10 lg:grid-cols-[1fr_380px] lg:gap-6 lg:mt-20 lg:pb-20 xl:grid-cols-[1fr_32.03125%] xl:gap-8">

		<main class="grid grid-cols-1 gap-8 lg:gap-12">

			<header>
				<h1 class="mb-6 font-semibold text-3xl">
					{{ 'Thank you for your order!'|t('foster-checkout') }}
				</h1>
				<div class="space-y-2">
					<p>
						{{ 'Your Order Number is'|t('foster-checkout') }}
						<strong>{{ order.reference }}</strong>
					</p>
					{# Only show email confirmation message if order confirmation email is configured and enabled #}
					{% set orderStatus = order.orderStatus %}
					{% if orderStatus.default == true %}
						{% set emails = orderStatus.getEmails() %}
						{% for email in emails|filter(email => email.enabled == true and email.recipientType == "customer" and email.getScenario() == "default") %}
							<p>{{ 'You will receive an order confirmation email shortly.'|t('foster-checkout') }}</p>
						{% endfor %}
					{% endif %}
				</div>
			</header>

			<div class="pb-8 border-b border-gray-250 md:py-12 md:border-t">

				<h2 class="mb-6 font-semibold text-3xl">{{ 'Order Details'|t('foster-checkout') }}</h2>

				<dl class="grid grid-cols-1 gap-6 p-4 bg-gray-200 rounded-lg xl:p-6">
					<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
						<dt class="font-semibold">{{ 'Date'|t('foster-checkout') }}</dt>
						{# TODO: Use the order date here, this was just for the markup and translation testing #}
						<dd>{{ order.dateOrdered|date('dateFormat'|t('foster-checkout')) }}</dd>
					</div>
					<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
						<dt class="font-semibold">{{ 'Email'|t('foster-checkout') }}</dt>
						<dd>{{ order.email }}</dd>
					</div>
					<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
						<dt class="font-semibold">{{ 'Ship to'|t('foster-checkout') }}</dt>
						<dd>
							{% include'foster-checkout/_components/app/formatted-address' with { 'address': order.shippingAddress} %}
						</dd>
					</div>
					{% if order.shippingMethod %}
					<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
						<dt class="font-semibold">{{ 'Method'|t('foster-checkout') }}</dt>
						<dd>
							<p>{{ order.shippingMethod.name }} {{ order.totalShippingCostAsCurrency }}</p>
							<p>{{ craft.commerce.shippingMethods.getMatchingShippingRule(cart, order.shippingMethod).getDescription() ?? '' }}</p>
						</dd>
					</div>
					{% endif %}

					{% if craft.giftVoucher is defined %}
						{# Check for applied / redeemed gift card vouchers in orders #}

						{% if order.orderAdjustments|length >= 1 %}
							{# 
								We currently only have access to the redeemed gift card vouchers code using order.orderAdjustments[0].description
								which appears in the form "Gift Voucher discount using code MTLYZKVDAQ"
								In order to get the code, we'll have to split the description string using 'code ' as its delimeter
							#}
							
							<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
								<dt class="font-semibold">{{ 'Gift card applied'|t('foster-checkout') }}</dt>
								<dd>
									{% for voucher in order.orderAdjustments %}
										{# Get redeemed voucher code from description #}
										{% set voucherCode = voucher.description|split('code ')[1] %}
										{# Get voucher remaining amount #}
										{% set amountRemaining = craft.giftVoucher.codes().codeKey(voucherCode).one().currentAmount %}
										{% set appliedVoucherAmount = (order.storedItemTotal - (voucher.amount|abs)) < 0 ? order.storedItemTotal : voucher.amount|abs %}
										{% set appliedVoucherDescription = voucher.description|split('code ')[1] ~ ' (' ~ appliedVoucherAmount|currency ~ ' applied, ' ~ amountRemaining|currency ~ ' remaining)' %}
										<p>{{ appliedVoucherDescription }}</p>
									{% endfor %}
								</dd>
							</div>
						{% endif %}
					{% endif %}

					<div class="sm:grid sm:grid-cols-[90px_1fr] sm:gap-6">
						<dt class="font-semibold">{{ 'Payment'|t('foster-checkout') }}</dt>
						<dd>{{ order.gateway.name }}</dd>
					</div>
				</dl>

				<div class="flex justify-end items-center gap-6 mt-9 lg:mt-12">
					<a
						href="{{ siteUrl(craft.fostercheckout.getPath('cancel')) }}"
						class="inline-block min-w-[180px] px-4 py-3 font-medium text-white text-center bg-[var(--brandColor)] border border-[var(--brandColor)] rounded-xl"
					>
						{{ 'Continue Shopping'|t('foster-checkout') }}
					</a>
				</div>

				{% set note = craft.checkout.note('order') %}
				{% if note %}
					<div class="mt-6 p-4 border border-gray-250 rounded-lg xl:p-6">
						{{ note|raw }}
					</div>
				{% endif %}

			</div>

			{% if craft.fostercheckout.getOption('enableMadeAMistake') %}
			{% set mistakeHeading = craft.checkout.note('mistakeHeading') %}
			{% set mistakeText = craft.checkout.note('mistakeText') %}
			<div class="hidden lg:block">
				{% if mistakeHeading %}
				<h3 class="font-semibold text-2xl">{{ mistakeHeading }}</h3>
				{% endif %}
				{% if mistakeText %}
				<div class="mt-6 space-y-2 text-gray-500">
					{{ mistakeText | raw }}
				</div>
				{% endif %}
			</div>
			{% endif %}
		</main>

		<aside>
			<div
				class="grid grid-cols-1 gap-10 lg:p-6 lg:bg-white lg:rounded-xl {{ craft.checkout.branding.style|default('rounded') == 'flat' ? 'lg:border lg:border-gray-300' : 'lg:shadow-[0_4px_12px_0_rgba(0,0,0,0.16)]' }}">

				<div class="grid grid-cols-1 gap-6">

					<h2 class="text-xl font-bold text-gray-800 leading-snug">
						{{ 'Item(s)'|t('foster-checkout') }}
					</h2>

					<ul class="grid grid-cols-1 gap-4">
						{% for lineItem in order.lineItems %}
							<li>
								{% include 'foster-checkout/_components/app/line-item-checkout' with {
									lineItem: lineItem
								} %}
							</li>
						{% endfor %}
					</ul>

				</div>

			</div>
		</aside>

	</div>

{% endblock %}
