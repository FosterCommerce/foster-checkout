{% extends 'foster-checkout/_layouts/default' %}

{% block head %}
	<title>
		{{ craft.fostercheckout.settings.branding.title ? craft.fostercheckout.settings.branding.title : siteName }}
		| {{ 'misc.checkoutTitle'|t('foster-checkout') }} : {{ 'payment.stepTitle'|t('foster-checkout') }}
	</title>
{% endblock %}

{% block body %}
	{% set gateways = craft.commerce.gateways.getAllCustomerEnabledGateways %}
	{% set addresses = currentUser ? (currentUser.addresses.all() ?? []) : [] %}

	{# ---- Billing state from cart (truth table) ---- #}
	{% set _sourceBillId = cart.sourceBillingAddressId ?? null %}
	{% set _shippingId = cart.sourceShippingAddressId ?? null %}
	{% set _hasMatch = cart.hasMatchingAddresses() %}
	{% set _hasBillingRecord = cart.billingAddressId is not empty %}
	{% set _isNewBilling = (not _hasMatch) and (_sourceBillId is null) and _hasBillingRecord %}
	{% set _initialBillingSame = _hasMatch ? 1 : 0 %}
	{% set _initialBillingAddressId = _sourceBillId ?? null %}
	{% set _initialNewBilling = _isNewBilling ? 1 : 0 %}

	{# ---- Gateway cart-truthy init ---- #}
	{% set _cartGatewayId = cart.gatewayId ?? (gateways|length ? gateways[0].id : null) %}
	{% set _gatewayIds = gateways|map(g => g.id) %}
	{% set _hasGateway = _cartGatewayId and (_cartGatewayId in _gatewayIds) %}
	{% set _initialGatewayId = _hasGateway ? _cartGatewayId : (gateways|length ? gateways[0].id : null) %}

	<div
		class="mt-10 pb-28 lg:pb-32"
		x-data="{
		  // billing selection
		  billingSameAsShipping: {{ _initialBillingSame }},
		  billingAddressId: {{ _initialBillingAddressId is not null ? _initialBillingAddressId : 'null' }},
		  newBillingAddress: {{ _initialNewBilling }},
		  editBillingAddressId: 0,

		  // gateway
		  gatewayId: {{ _initialGatewayId ?: 'null' }},

		  // mirrors for posting
		  syncHidden() {
			if (this.$refs.postBillingSame) this.$refs.postBillingSame.value = this.billingSameAsShipping ? 1 : 0;
			if (this.$refs.postBillingId) this.$refs.postBillingId.value = this.billingAddressId ?? '';
			if (this.$refs.postNewBilling) this.$refs.postNewBilling.value = this.newBillingAddress ? 1 : 0;
			if (this.$refs.postGateway) this.$refs.postGateway.value = this.gatewayId ?? '';
		  }
		}"
		x-init="syncHidden()"
		x-effect="syncHidden()"
	>
		<div class="grid grid-cols-1 gap-16 lg:grid-cols-[1fr_380px] lg:gap-6 xl:grid-cols-[1fr_32.03125%] xl:gap-8">
			<main class="pb-8 border-b border-gray-300 lg:pb-0 lg:border-b-0">
				<div class="grid grid-cols-1 gap-4 xl:gap-6">
					{% include 'foster-checkout/_components/app/steps-completed' with { step: 'payment' } %}

					<div class="border border-gray-250 rounded-lg overflow-hidden {{ craft.fostercheckout.settings.branding.style|default('rounded') == 'flat' ? 'lg:border lg:border-gray-300' : 'lg:shadow-[0_4px_12px_0_rgba(0,0,0,0.16)]' }}">
						<h2 class="p-4 font-semibold bg-gray-200">
							{{ 'payment.stepName'|t('foster-checkout') }}
						</h2>

						<div class="grid grid-cols-1 gap-5 xl:gap-6 p-4">

							{# Optional note #}
							{% set note = craft.fostercheckout.note('payment') %}
							{% if note %}
								<div class="mt-2 p-4 border border-gray-250 rounded-lg [&_a]:underline [&_a:hover]:decoration-current">
									{{ note|raw }}
								</div>
							{% endif %}

							{# ===================== BILLING ADDRESS SECTION ===================== #}
							<section>
								<h3 class="px-4 mb-4 font-semibold xl:px-0">
									{{ 'payment.billingAddress'|t('foster-checkout') }}
								</h3>

								<div class="xl:border xl:border-gray-250 xl:rounded-lg xl:overflow-hidden">
									{# Single form to update cart billing choice and address book edits. No nested forms. #}
									<form method="post" x-data x-on:submit="$el.querySelector('[data-bill-submit]')?.setAttribute('disabled','disabled')">
										{{ csrfInput() }}

										{# Action switches depending on whether editing an address or just updating cart #}
										<template x-if="parseInt(editBillingAddressId) === 0">
											<div>
												{{ actionInput('commerce/cart/update-cart') }}
												{{ redirectInput(siteUrl(craft.fostercheckout.settings.paths.checkout) ~ '/payment') }}
											</div>
										</template>
										<template x-if="parseInt(editBillingAddressId) !== 0">
											<div>
												{{ actionInput('users/save-address') }}
												{{ redirectInput(siteUrl(craft.fostercheckout.settings.paths.checkout) ~ '/payment') }}
												<input type="hidden" name="addressId" :value="editBillingAddressId">
											</div>
										</template>

										{# Hidden mirrors for posting the chosen billing mode #}
										<input type="hidden" x-ref="postBillingSame" name="billingAddressSameAsShipping" value="">
										<input type="hidden" x-ref="postBillingId" name="billingAddressId" value="">
										<input type="hidden" x-ref="postNewBilling" name="useNewBillingAddress" value="">

										{# Same as shipping #}
										<div class="p-4" :class="{ 'bg-gray-100': parseInt(billingSameAsShipping) === 1 }">
											<div class="radio">
												<input
													id="billingSameAsShipping_1"
													type="radio"
													class="absolute opacity-0 w-px h-px"
													x-model.number="billingSameAsShipping"
													value="1"
													@change="newBillingAddress = 0; billingAddressId = null; editBillingAddressId = 0"
												>
												<label for="billingSameAsShipping_1" class="flex justify-start items-center gap-4 cursor-pointer">
													<span class="block">
														<span class="block" :class="{ 'font-medium text-black': parseInt(billingSameAsShipping) === 1 }">
														  {{ 'payment.saveAsShippingAddress'|t('foster-checkout') }}
														</span>
														<span class="block mt-2 text-gray-500">
														  {% include 'foster-checkout/_components/app/formatted-address' with { address: cart.shippingAddress } %}
														</span>
													</span>
												</label>
											</div>
										</div>

										{# Address book choices (exclude the shipping source id so the first option is meaningfully different) #}
										{% for address in addresses %}
											{% if _shippingId is not defined or address.id != _shippingId %}
												<div class="p-4 border-t"
													 :class="{ 'bg-gray-100': parseInt(billingAddressId) === {{ address.id }} && !billingSameAsShipping }">
													<div class="flex justify-between items-center gap-4 radio">
														<input
															id="bill_addr_{{ address.id }}"
															type="radio"
															class="absolute opacity-0 w-px h-px"
															name="billingAddressId_radio"
															x-model.number="billingAddressId"
															value="{{ address.id }}"
															@change="billingSameAsShipping = 0; newBillingAddress = 0; editBillingAddressId = 0"
														>
														<label
															for="bill_addr_{{ address.id }}"
															class="inline-flex justify-start items-center gap-4 cursor-pointer"
															:class="{ 'font-medium text-black': parseInt(billingAddressId) === {{ address.id }} && !billingSameAsShipping }"
														>
															{% include 'foster-checkout/_components/app/formatted-address' with { address: address } %}
														</label>

														<button
															type="button"
															class="text-[var(--brandColor)] underline"
															@click="editBillingAddressId = parseInt(editBillingAddressId) === {{ address.id }} ? 0 : {{ address.id }}"
														>
															<template x-if="parseInt(editBillingAddressId) === {{ address.id }}"><span>{{ 'misc.cancel'|t('foster-checkout') }}</span></template>
															<template x-if="parseInt(editBillingAddressId) !== {{ address.id }}"><span>{{ 'misc.edit'|t('foster-checkout') }}</span></template>
														</button>
													</div>

													<template x-if="parseInt(editBillingAddressId) === {{ address.id }}">
														<div class="pt-8">
															{% include 'foster-checkout/_components/app/address-fields' %}
															<div class="flex justify-start items-center gap-6 mt-8 pt-4 border-gray-250 border-t">
																<button type="submit" data-bill-submit class="block min-w-[100px] px-4 py-3 font-medium text-white text-center bg-[var(--brandColor)] border border-[var(--brandColor)] rounded-xl sm:min-w-[140px] md:min-w-[200px]">
																	{{ 'misc.save'|t('foster-checkout') }}
																</button>
																<button type="button" class="block min-w-[100px] px-4 py-3 font-medium text-[var(--brandColor)] text-center bg-white border border-[var(--brandColor)] rounded-xl sm:min-w-[140px] md:min-w-[200px]" @click="editBillingAddressId = 0">
																	{{ 'misc.cancel'|t('foster-checkout') }}
																</button>
															</div>
														</div>
													</template>
												</div>
											{% endif %}
										{% endfor %}

										{# New billing address #}
										<div class="border-t border-gray-250" :class="{ 'bg-gray-100': parseInt(newBillingAddress) === 1 }">
											<div class="p-4 radio">
												<input
													id="newBillingAddress"
													type="radio"
													class="absolute opacity-0 w-px h-px"
													x-model.number="newBillingAddress"
													value="1"
													@change="billingSameAsShipping = 0; billingAddressId = null; editBillingAddressId = 0"
												>
												<label
													for="newBillingAddress"
													class="inline-flex justify-start items-center gap-4 cursor-pointer"
													:class="{ 'font-medium text-black': parseInt(newBillingAddress) === 1 }"
												>
													{{ 'payment.useDifferentBillingAddress'|t('foster-checkout') }}
												</label>
											</div>

											<div x-show="parseInt(newBillingAddress) === 1" x-cloak class="p-4">
												{# When newBillingAddress is chosen, just post to update-cart with the address fields #}
												{% include 'foster-checkout/_components/app/address-fields' with {
													context: 'billingAddress',
													address: cart.billingAddress ?? null,
												} %}

												<div class="mt-4 p4 checkbox">
													{# You can switch this to a cart custom field if you want cart-truth only #}
													<input type="checkbox" class="absolute opacity-0 w-px h-px" id="saveBillingAddressOnOrderComplete" name="saveBillingAddressOnOrderComplete" value="1">
													<label class="inline-flex justify-start items-center gap-4 cursor-pointer font-medium text-gray-500" for="saveBillingAddressOnOrderComplete">
														{{ 'payment.saveToAddressBook'|t('foster-checkout') }}
													</label>
												</div>

												<div class="flex justify-start items-center gap-6 mt-8 pt-4 border-gray-250 border-t">
													<button type="submit" data-bill-submit class="block min-w-[100px] px-4 py-3 font-medium text-white text-center bg-[var(--brandColor)] border border-[var(--brandColor)] rounded-xl sm:min-w-[140px] md:min-w-[200px]">
														{{ cart.billingAddressId and not _hasMatch ? 'misc.update'|t('foster-checkout') : 'misc.save'|t('foster-checkout') }}
													</button>
													<button type="button" class="block min-w-[100px] px-4 py-3 font-medium text-[var(--brandColor)] text-center bg-white border border-[var(--brandColor)] rounded-xl sm:min-w-[140px] md:min-w-[200px]" @click="newBillingAddress = 0">
														{{ 'misc.cancel'|t('foster-checkout') }}
													</button>
												</div>
											</div>
										</div>
									</form>
								</div>
							</section>

							{# ===================== PAYMENT METHOD SECTION ===================== #}
							<section>
								<h3 class="px-4 mb-4 font-semibold xl:px-0">
									{{ 'payment.paymentMethod'|t('foster-checkout') }}
								</h3>

								<div class="xl:border xl:border-gray-250 xl:rounded-lg xl:overflow-hidden">
									{# Hidden mirror so a cart update elsewhere could use it, and so pay forms can read it #}
									<input type="hidden" x-ref="postGateway" value="{{ _initialGatewayId }}">

									{% for gateway in gateways %}
										{% set gatewayClass = className(gateway) %}
										{% if gatewayClass == 'craft\\commerce\\stripe\\gateways\\PaymentIntents' and cart.totalAmount == 0 %}
											{% set shouldRender = false %}
										{% else %}
											{% set shouldRender = true %}
										{% endif %}

										{% if shouldRender %}
											<div class="p-4 border-b border-gray-250"
												 :class="{ 'bg-gray-100': parseInt(gatewayId) === {{ gateway.id }} }">
												<div class="relative flex justify-between items-center gap-4 radio">
													<input
														id="gateway_{{ gateway.id }}"
														name="gatewayId_radio"
														type="radio"
														class="absolute opacity-0 w-px h-px"
														x-model.number="gatewayId"
														value="{{ gateway.id }}"
													>
													<label for="gateway_{{ gateway.id }}" class="inline-flex justify-start items-center gap-4 cursor-pointer">
														<span class="block">{{ gateway.name|t('foster-checkout') }}</span>
													</label>
												</div>

												{# Gateway form panel #}
												<div
													class="pt-8
													[&_form]:grid [&_form]:gap-2

													/* fieldsets */
													[&_fieldset]:border [&_fieldset]:border-gray-250 [&_fieldset]:rounded-lg [&_fieldset]:p-4
													[&_fieldset+fieldset]:mt-4
													[&_legend]:px-1 [&_legend]:text-sm [&_legend]:font-medium [&_legend]:text-gray-700

													/* rows and grids inside vendor markup */
													[&_.grid]:grid [&_.grid]:gap-4
													[&_.grid[data-cols='2']]:grid-cols-1 md:[&_.grid[data-cols='2']]:grid-cols-2
													[&_.item]:space-y-2

													/* the multi-input card row (number, exp, cvv) */
													[&_.multitext]:grid [&_.multitext]:gap-3
													[&_.multitextrow]:grid [&_.multitextrow]:gap-3
													[&_.multitextrow]:grid-cols-1 sm:[&_.multitextrow]:grid-cols-[2fr_1fr_1fr]

													/* inputs */
													[&_input.text]:block [&_input.text]:w-full
													[&_input.text]:rounded-xl
													[&_input.text]:border [&_input.text]:border-gray-300
													[&_input.text]:px-3 [&_input.text]:py-2
													focus:[&_input.text]:outline-none
													focus:[&_input.text]:ring-2 focus:[&_input.text]:ring-[var(--brandColor)]
													[&_input.text::placeholder]:text-gray-400

													/* errors if gateway injects them later */
													[&_.errors]:text-sm [&_.errors]:text-red-600 [&_.errors]:mt-1

													/* button */
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:block
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:min-w-[200px]
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:px-4
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:py-3
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:font-medium
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:text-white
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:text-center
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:bg-[var(--brandColor)]
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:border
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:border-[var(--brandColor)]
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:rounded-xl
													[&_button#paymentForm-authorizeNet-authorizeSubmit]:transition
													hover:[&_button#paymentForm-authorizeNet-authorizeSubmit]:opacity-90
													"
													x-show="parseInt(gatewayId) === {{ gateway.id }}"
													x-cloak
												>

													{% set buttonText = 'payment.payButtonText'|t('foster-checkout') ~ ' ' ~ cart.totalAsCurrency %}

													{% set params = {} %}
													{% if gatewayClass == 'craft\\commerce\\stripe\\gateways\\PaymentIntents' %}
														{% set params = {
															order: cart,
															paymentFormType: 'elements',
															appearance: {
																theme: craft.fostercheckout.settings.branding.style|default('rounded') == 'flat' ? 'flat' : 'stripe',
																labels: 'floating',
																variables: {
																	colorPrimary: craft.fostercheckout.settings.branding.color ?? '#1F2937',
																	borderRadius: craft.fostercheckout.settings.branding.style|default('rounded') == 'flat' ? '0px' : '6px',
																	gridColumnSpacing: '24px',
																	gridRowSpacing: '24px',
																	tabSpacing: '12px',
																}
															},
															submitButtonText: buttonText,
															submitButtonClasses: 'mt-8 justify-between items-center gap-4 w-full px-4 py-3 font-medium text-white text-center bg-[var(--brandColor)] border border-[var(--brandColor)] rounded-xl lg:inline-block'
														} %}
													{% elseif gatewayClass == 'craft\\commerce\\paypalcheckout\\gateways\\Gateway' %}
														{% set params = { currency: cart.paymentCurrency } %}
													{% endif %}

													{# Gateway with custom fields (manual add-ons) #}
													{% if craft.fostercheckout.getManualGatewayFields(gateway.handle) %}
														<form method="POST" class="grid gap-y-4 gap-x-4 sm:grid-cols-{{ craft.fostercheckout.getManualGatewayColumns(gateway.handle) ?: 3 }}">
															{{ csrfInput() }}
															{{ actionInput('commerce/payments/pay') }}

															{# IMPORTANT: these must NOT be namespaced #}
															{{ redirectInput(siteUrl(craft.fostercheckout.settings.paths.checkout ~ '/order', { number: cart.number, success: 'true' })) }}
															{{ hiddenInput('cancelUrl', siteUrl(craft.fostercheckout.settings.paths.checkout ~ '/payment')|hash) }}
															{{ hiddenInput('orderEmail', cart.email) }}
															{{ hiddenInput('gatewayId', gateway.id) }}

															{# Only namespace the gateway fields #}
															{% namespace gateway.handle|commercePaymentFormNamespace %}
																{% for field in craft.fostercheckout.getManualGatewayFields(gateway.handle) %}
																	<div class="sm:col-span-{{ field.columns ?: 'full' }}">
																		{% switch field.type %}
																		{% case 'select' %}{% set fieldTemplate = 'input-select' %}
																		{% default %}{% set fieldTemplate = 'input-text-clearable' %}
																		{% endswitch %}

																		{% include 'foster-checkout/_components/base/' ~ fieldTemplate with {
																			context: '',
																			label: field.label,
																			id: field.id ?? field.handle,
																			name: field.name ?? field.handle,
																			type: field.type,
																			placeholder: field.placeholder,
																			errors: [],
																			minLength: field.minLength,
																			maxLength: field.maxLength,
																			min: field.min,
																			max: field.max,
																			required: field.required ?? false,
																			options: field.options ?? [],
																		} %}
																	</div>
																{% endfor %}
															{% endnamespace %}

															<button
																	type="submit"
																	class="mt-8 justify-between items-center gap-4 w-full px-4 py-3 font-medium text-white text-center bg-[var(--brandColor)] border border-[var(--brandColor)] rounded-xl lg:inline-block"
															>
																{{ 'payment.payButtonText'|t('foster-checkout') ~ ' ' ~ cart.totalAsCurrency }}
															</button>
														</form>
													{% else %}
														{# Native gateway form #}
														{% namespace gateway.handle|commercePaymentFormNamespace %}
															{{ gateway.getPaymentFormHtml(params)|raw }}
														{% endnamespace %}
													{% endif %}
												</div>
											</div>
										{% endif %}
									{% endfor %}
								</div>
							</section>
						</div>
					</div>
				</div>
			</main>

			<aside>
				<div class="grid grid-cols-1 gap-10 lg:p-4 lg:bg-white lg:rounded-xl {{ craft.fostercheckout.settings.branding.style|default('rounded') == 'flat' ? 'lg:border lg:border-gray-300' : 'lg:shadow-[0_4px_12px_0_rgba(0,0,0,0.16)]' }}">
					<div class="grid grid-cols-1 gap-6">
						<div class="flex justify-between items-center gap-4">
							<h2 class="text-xl font-bold text-gray-800 leading-snug">
								{{ 'summary.itemsTitle'|t('foster-checkout') }}
							</h2>
							<a href="{{ siteUrl(craft.fostercheckout.settings.paths.cart) }}" class="inline-block text-[var(--brandColor)] underline">
								{{ 'misc.edit'|t('foster-checkout') }}
							</a>
						</div>

						<ul class="grid grid-cols-1 gap-4">
							{% for lineItem in cart.lineItems %}
								<li>
									{% include 'foster-checkout/_components/app/line-item-checkout' with { lineItem: lineItem } %}
								</li>
							{% endfor %}
						</ul>
					</div>

					{% include 'foster-checkout/_components/app/summary-cart' with { estimatedTax: false } %}
				</div>

				{% include 'foster-checkout/_components/app/global-checkout-note' %}
			</aside>
		</div>
	</div>

	{% js %}
		var $paymentForms = document.querySelectorAll('.paymentForm');

		if ($paymentForms.length) {
			$paymentForms.forEach(($paymentForm) => {

				// Only allow the payment form submit to be triggered once.
				$paymentForm.addEventListener('submit', function(ev) {

					if ($paymentForm.dataset.processing) {
						ev.preventDefault();
						return false;
					}

					$paymentForm.dataset.processing = true;
				});
			});
		}
	{% endjs %}
{% endblock %}
